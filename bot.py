# Handle Platform Selection from Menu
async def handle_platform(update: Update, context: ContextTypes.DEFAULT_TYPE):
    platform = update.message.text.lower()
    supported_platforms = ["ЁЯОе youtube", "ЁЯУ▒ tiktok", "ЁЯУШ facebook", "ЁЯУ╖ instagram", "тЭМ ржПржХрзНрж╕ (twitter)"]

    # Reset previous platform and URL
    context.user_data.clear()

    if platform in supported_platforms:
        context.user_data['platform'] = platform
        await update.message.reply_text(f"тЬЕ {platform.upper()} рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржПржЦржи ржнрж┐ржбрж┐ржУрж░ рж▓рж┐ржВржХ ржкрж╛ржарж╛ржиред")
    else:
        await update.message.reply_text("тЪая╕П ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржПржХржЯрж┐ ржмрзИржз ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржиред")

# Handle Video Link
async def handle_link(update: Update, context: ContextTypes.DEFAULT_TYPE):
    platform = context.user_data.get('platform', None)
    url = update.message.text

    if not platform:
        await update.message.reply_text("тЪая╕П ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзБржиред /start ржжрж┐рзЯрзЗ рж╢рзБрж░рзБ ржХрж░рзБржиред")
        return

    # URL ржпрж╛ржЪрж╛ржЗ ржХрж░рзБржи
    if not is_valid_url(url):
        await update.message.reply_text("тЪая╕П ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржПржХржЯрж┐ ржмрзИржз URL ржкрж╛ржарж╛ржиред")
        return

    # ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржорзЗрж░ ржЬржирзНржп рж╕ржарж┐ржХ рж▓рж┐ржВржХ ржпрж╛ржЪрж╛ржЗ
    if platform == "ЁЯОе youtube" and "youtube.com" not in url:
        await update.message.reply_text("тЪая╕П рж╢рзБржзрзБржорж╛рждрзНрж░ YouTube рж▓рж┐ржЩрзНржХ ржкрж╛ржарж╛ржиред")
        return
    if platform == "ЁЯУ▒ tiktok" and "tiktok.com" not in url:
        await update.message.reply_text("тЪая╕П рж╢рзБржзрзБржорж╛рждрзНрж░ TikTok рж▓рж┐ржЩрзНржХ ржкрж╛ржарж╛ржиред")
        return
    if platform == "ЁЯУШ facebook" and "facebook.com" not in url:
        await update.message.reply_text("тЪая╕П рж╢рзБржзрзБржорж╛рждрзНрж░ Facebook рж▓рж┐ржЩрзНржХ ржкрж╛ржарж╛ржиред")
        return
    if platform == "ЁЯУ╖ instagram" and "instagram.com" not in url:
        await update.message.reply_text("тЪая╕П рж╢рзБржзрзБржорж╛рждрзНрж░ Instagram рж▓рж┐ржЩрзНржХ ржкрж╛ржарж╛ржиред")
        return
    if platform == "тЭМ ржПржХрзНрж╕ (twitter)" and "twitter.com" not in url:
        await update.message.reply_text("тЪая╕П рж╢рзБржзрзБржорж╛рждрзНрж░ Twitter рж▓рж┐ржЩрзНржХ ржкрж╛ржарж╛ржиред")
        return

    context.user_data['url'] = url

    keyboard = [
        [InlineKeyboardButton("240p", callback_data='240'),
         InlineKeyboardButton("360p", callback_data='360')],
        [InlineKeyboardButton("720p", callback_data='720'),
         InlineKeyboardButton("ржЕржбрж┐ржУ (MP3)", callback_data='audio')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text("ЁЯУе ржнрж┐ржбрж┐ржУ ржбрж╛ржЙржирж▓рзЛржбрзЗрж░ ржХрзЛржпрж╝рж╛рж▓рж┐ржЯрж┐ рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзБржи:", reply_markup=reply_markup)